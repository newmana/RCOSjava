<?xml version="1.0"?>
<project name="RCOS.java" default="all" basedir=".">
  <property name="app.name" value="RCOSjava"/>
  <property name="app.version" value="0.5-pr1"/>
  <property name="src.dir" value="src"/>
  <property name="gen.dir" value="gen"/>
  <property name="lib.dir" value="lib"/>
  <property name="dist.dir" value="dist"/>
  <property name="web.dir" value="web"/>
  <property name="javadoc.dir" value="javadoc"/>
  <property name="dist.jar" value="${app.name}-${app.version}.jar"/>
  <property name="grammar.jar" value="${app.name}-simplec-${app.version}.jar"/>
  <property name="build.compiler" value="classic"/>

  <path id="jars">
    <fileset dir="${lib.dir}" >
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <taskdef name="sablecc" classname="org.sablecc.ant.taskdef.Sablecc">
    <classpath refid="jars"/>
  </taskdef>

  <target name="all" depends="clean,prepare,compile,dist,javadoc"
   description="Call all the targets"/>

   <target name="clean"
    description="Delete files generated by building">
     <delete dir="${dist.dir}"/>
     <delete dir="${javadoc.dir}"/>
     <delete dir="${gen.dir}"/>
   </target>

  <target name="prepare"
   description="Creates directories necessary for compiling">
    <echo message="Creating distribution directory in current dir called: ${dist.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${javadoc.dir}"/>
    <mkdir dir="${gen.dir}"/>
    <mkdir dir="${gen.dir}/src"/>
    <mkdir dir="${gen.dir}/classes"/>

    <!-- Test whether to generate javadoc file-->
    <uptodate property="javadoc.required" targetfile="${src.dir}/java">
      <srcfiles dir="${javadoc.dir}"/>
    </uptodate>

    <!-- Test whether to generate simple c grammar file-->
    <uptodate property="sablecc.required" targetfile="${src.dir}/grammar/simplec/simplec.sablecc">
      <srcfiles dir="${lib.dir}" includes="${grammar.jar}"/>
    </uptodate>
  </target>

  <target name="sablecc" depends="clean, prepare"
   if="sablecc.required"
   description="Creates Simple C jar file to process C files">
 
    <echo message="Got: ${sablecc.required}"/>

    <sablecc src="${src.dir}/grammar/simplec" outputDirectory="${gen.dir}/src"/>

    <javac 
     classpathref="jars"
     srcdir="${gen.dir}/src" destdir="${gen.dir}/classes"
     debug="off" optimize="on" deprecation="on"/>

    <copy file="${gen.dir}/src/org/sablecc/simplec/lexer/lexer.dat"
          toDir="${gen.dir}/classes/org/sablecc/simplec/lexer"/>

    <copy file="${gen.dir}/src/org/sablecc/simplec/parser/parser.dat"
          toDir="${gen.dir}/classes/org/sablecc/simplec/parser"/>

    <jar jarfile="${lib.dir}/${grammar.jar}" basedir="${gen.dir}/classes"/>
  </target>

  <target name="compile" depends="sablecc"
   description="Compiles RCOSjava">
    <echo message="Compiling: ${src.dir} to ${dist.dir}"/>
    <javac 
     classpathref="jars"
     srcdir="${src.dir}" destdir="${dist.dir}"
     debug="off" optimize="on" deprecation="on"/>

    <!-- Move all the images and sounds too-->
    <copy todir="${dist.dir}/org/rcosjava/software/animator/images">
      <fileset dir="${src.dir}/java/org/rcosjava/software/animator/images"/>
    </copy>
    <copy todir="${dist.dir}/org/rcosjava/software/animator/audio">
      <fileset dir="${src.dir}/java//org/rcosjava/software/animator/audio"/>
    </copy>
  </target>

  <target name="dist" depends="compile"
   description="Creates directory for distribution">
    <!-- Client distribution -->
    <jar jarfile="${dist.jar}" basedir="${dist.dir}"/>
    <move file="${dist.jar}" todir="${dist.dir}"/>

    <copy todir="${dist.dir}">
      <fileset dir="${web.dir}"/>
    </copy>

    <!-- Server side distribution -->
    <copy todir="${dist.dir}/pll2/executable">
      <fileset dir="${src.dir}/pcode"/>
    </copy>

    <mkdir dir="${dist.dir}/pll2/recorded"/>

    <!-- Clean up dist directory -->
    <delete dir="${dist.dir}/com"/>
    <delete dir="${dist.dir}/fr"/>
    <delete dir="${dist.dir}/org"/>
  </target>

  <target name="javadoc" depends="dist"
   if="javadoc.required"
   description="Create Javadoc in javadoc directory">
    <javadoc packagenames="org.rcosjava.*, pll2.*" sourcepath="${src.dir}/java"
      classpathref="jars"      
      destdir="${javadoc.dir}" author="true" version="true" use="true"/>
  </target>
</project>

