package org.rcosjava.software.util;import java.util.*;/** * Implements Last In First Out type of queue by inserting the object at the end * of the queue (and removing them from the end of the queue). The rest of the * queue's implementation relies on BaseQueue implementing the FIFO queue as * expected. <P> * * * * @author Andrew Newman. * @created 2nd February 1996 * @see org.rcosjava.software.util.LIFOQueue * @version 1.00 $Date$ */public class LIFOQueue extends BaseQueue{  /**   * Default constructor.   */  public LIFOQueue()  {    super();  }  /**   * Constructor of the queue.   *   * @param initialCapacity initial size of queue.   * @param capacityIncrement Description of Parameter   */  public LIFOQueue(int initialCapacity, int capacityIncrement)  {    super(initialCapacity, capacityIncrement);  }  /**   * Create a queue with a given set of objects.   *   * @param initialCapacity initial size of queue.   * @param capacityIncrement Description of Parameter   * @param newObjects Description of Parameter   */  public LIFOQueue(int initialCapacity, int capacityIncrement,      Iterator newObjects)  {    super(initialCapacity, capacityIncrement, newObjects);  }  /**   * This will insert a new element into the queue at the end of the queue.   *   * @param theObject Description of Parameter   */  public void insert(Object theObject)  {    add(itemCount(), theObject);  }}