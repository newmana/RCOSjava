package org.rcosjava.software.filesystem;/** * Description of the Interface * * @author administrator * @created 28 April 2002 */public interface FileSystem{  /**   * Description of the Method   *   * @param mvNewMountPoint Description of Parameter   * @param mvNewDeviceName Description of Parameter   */  public void mount(String mvNewMountPoint, String mvNewDeviceName);  /**   * Description of the Method   *   * @param iRequestID Description of Parameter   * @param sFileName Description of Parameter   * @return Description of the Returned Value   */  public FileSystemReturnData allocate(int iRequestID, String sFileName);  /**   * Description of the Method   *   * @param iRequestID Description of Parameter   * @param iFSFileNo Description of Parameter   * @return Description of the Returned Value   */  public FileSystemReturnData eof(int iRequestID, int iFSFileNo);  /**   * Description of the Method   *   * @param iRequestID Description of Parameter   * @param iFSFileNo Description of Parameter   * @return Description of the Returned Value   */  public FileSystemReturnData delete(int iRequestID, int iFSFileNo);  /**   * Description of the Method   *   * @param iRequestID Description of Parameter   * @param iFSFileNo Description of Parameter   * @return Description of the Returned Value   */  public FileSystemReturnData create(int iRequestID, int iFSFileNo);  /**   * Description of the Method   *   * @param iRequestID Description of Parameter   * @param iFSFileNo Description of Parameter   * @return Description of the Returned Value   */  public FileSystemReturnData close(int iRequestID, int iFSFileNo);  /**   * Description of the Method   *   * @param iRequestID Description of Parameter   * @param iFSFileNo Description of Parameter   * @return Description of the Returned Value   */  public FileSystemReturnData open(int iRequestID, int iFSFileNo);  /**   * Description of the Method   *   * @param iRequestID Description of Parameter   * @param iFSFileNo Description of Parameter   * @return Description of the Returned Value   */  public FileSystemReturnData read(int iRequestID, int iFSFileNo);  /**   * Description of the Method   *   * @param iRequestID Description of Parameter   * @param iFSFileNo Description of Parameter   * @return Description of the Returned Value   */  public FileSystemReturnData write(int iRequestID, int iFSFileNo);  /**   * Gets the DirectoryPosition attribute of the FileSystem object   *   * @param mvFilename Description of Parameter   * @return The DirectoryPosition value   */  public int getDirectoryPosition(String mvFilename);  /**   * Gets the FreeEntry attribute of the FileSystem object   *   * @param mvDeviceNumber Description of Parameter   * @return The FreeEntry value   */  public int getFreeEntry(int mvDeviceNumber);  /**   * Description of the Method   *   * @param mvDeviceNumber Description of Parameter   * @return Description of the Returned Value   */  public boolean diskFull(int mvDeviceNumber);  /**   * Gets the FreeBlock attribute of the FileSystem object   *   * @param mvDeviceNumber Description of Parameter   * @return The FreeBlock value   */  public int getFreeBlock(int mvDeviceNumber);  /**   * Gets the NextDirectoryEntry attribute of the FileSystem object   *   * @param mvDirEntry Description of Parameter   * @param mvDeviceNumber Description of Parameter   * @return The NextDirectoryEntry value   */  public int getNextDirectoryEntry(int mvDirEntry, int mvDeviceNumber);  /**   * Description of the Method   *   * @param mvEntryNumber Description of Parameter   * @param mvDeviceNumber Description of Parameter   */  public void deallocateEntry(int mvEntryNumber, int mvDeviceNumber);  /**   * Gets the MountPoint attribute of the FileSystem object   *   * @param mvFilename Description of Parameter   * @return The MountPoint value   */  public String getMountPoint(String mvFilename);}