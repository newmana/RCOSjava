package org.rcosjava.messaging.messages.os;import org.rcosjava.messaging.postoffices.os.OSMessageHandler;import org.rcosjava.software.ipc.IPC;/** * Message sent to the IPC from the Kernel to open an existing semaphore. * Proceeds the create Semaphore function. <P> * * * * @author Andrew Newman. * @created 28th of March 1996 * @version 1.00 $Date$ */public class SemaphoreOpen extends OSMessageAdapter{  /**   * Description of the Field   */  private String semaphoreId;  /**   * Description of the Field   */  private int pid;  /**   * Constructor for the SemaphoreOpen object   *   * @param theSource Description of Parameter   * @param newSemaphoreId Description of Parameter   * @param newPID Description of Parameter   */  public SemaphoreOpen(OSMessageHandler theSource, String newSemaphoreId,      int newPID)  {    super(theSource);    semaphoreId = newSemaphoreId;    pid = newPID;  }  /**   * Sets the SempahoreID attribute of the SemaphoreOpen object   *   * @param newSemaphoreId The new SempahoreID value   */  public void setSempahoreID(String newSemaphoreId)  {    semaphoreId = newSemaphoreId;  }  /**   * Sets the ProcessID attribute of the SemaphoreOpen object   *   * @param newPID The new ProcessID value   */  public void setProcessID(int newPID)  {    pid = newPID;  }  /**   * Description of the Method   *   * @param theElement Description of Parameter   */  public void doMessage(IPC theElement)  {    theElement.semaphoreOpen(semaphoreId, pid);  }}